---
- name: Provision Linode Testing Environment
  hosts: localhost
  gather_facts: no
  vars_files:
    - ../group_vars/all/vault.yml # Explicitly include vault file
  vars:
    linode_instance_label: oo-acs-testing
    linode_instance_type: g6-nanode-1 # 1GB Nanode
    linode_instance_region: ap-southeast # Sydney, AU
    linode_instance_image: linode/ubuntu20.04
    linode_instance_tags:
      - testing
      - oo-acs
    linode_ssh_pub_key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHkzQ7fAkTmclUvsWBxKBmNrBcipmLEfk0+nQD6X/HDH unixthat@Stephens-MacBook-Air.local"
    linode_firewall_name: fw-testing-basic

  tasks:
    - name: Ensure Linode API token is set
      fail:
        msg: "LINODE_TOKEN environment variable is not set. Please set it before running this playbook."
      when: lookup('env', 'LINODE_TOKEN') | length == 0
      run_once: yes

    - name: Delete existing Testing instance (if any) for a clean build
      linode.cloud.instance:
        label: "{{ linode_instance_label }}"
        state: absent
      delegate_to: localhost
      ignore_errors: yes # Don't fail if the instance doesn't exist

    - name: Create Linode Testing instance
      linode.cloud.instance:
        label: "{{ linode_instance_label }}"
        type: "{{ linode_instance_type }}"
        region: "{{ linode_instance_region }}"
        image: "{{ linode_instance_image }}"
        root_pass: "{{ vault_linode_root_password }}" # Reverted back to Vault variable
        authorized_keys:
          - "{{ linode_ssh_pub_key }}"
        tags: "{{ linode_instance_tags }}"
        state: present
      register: testing_instance
      delegate_to: localhost # Explicitly run on control node

    - name: Add new instance to inventory group
      add_host:
        name: "{{ testing_instance.instance.ipv4[0] }}" # Use the first public IPv4
        groups: linode_testing_instances
        ansible_user: root # Initially connect as root
        ansible_ssh_private_key_file: ~/.ssh/linodeKey
      when: testing_instance.changed

    - name: Create Linode Firewall for Testing instance
      linode.cloud.firewall: # Use FQCN
        label: "{{ linode_firewall_name }}"
        rules: # Dictionary containing policies and rule lists
          inbound_policy: DROP  # Default policy for inbound
          outbound_policy: ACCEPT # Default policy for outbound
          inbound: # List of inbound rules
            - label: allow-ssh
              # No 'direction' needed here
              protocol: TCP
              ports: '22'
              addresses:
                ipv4: ['0.0.0.0/0']
                ipv6: ['::/0']
              action: ACCEPT
        devices: # List of dictionaries
          - id: "{{ testing_instance.instance.id | int }}"
            # type: linode # Optional, defaults to linode
        state: present
      delegate_to: localhost # Explicitly run on control node
      when: testing_instance.changed # Only create/update firewall if instance was created/changed

    - name: Display Testing Instance IP
      debug:
        msg: "Testing instance created with IP: {{ testing_instance.instance.ipv4[0] }}"
      when: testing_instance.changed 